{"version":3,"sources":["authentication-provider/index.tsx","utils/getTokenEncryptSecret.ts","login/index.tsx","utils/getPasswordHashSalt.ts","dashboard/routes.tsx","analysis/RoomStatus.tsx","analysis/Revenue.tsx","analysis/index.tsx","room/index.tsx","kind-of-room/Grid.tsx","kind-of-room/Modal.tsx","kind-of-room/index.tsx","customer/index.tsx","agreement/index.tsx","unitPrice/index.tsx","bill/index.tsx","equipment/index.tsx","dashboard/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AuthenticationContext","createContext","authenticate","setAuthenticate","AuthenticationProvider","children","token","localStorage","getItem","useState","verify","Provider","value","LoginPage","useForm","form","registration","setRegistration","useContext","db","window","roomManagementSystemDB","handleLogin","validateFields","then","a","username","password","remember","account","where","equals","toArray","data","length","error","add","id","uuidv4","hashSync","success","resetFields","compareSync","sign","expiresIn","setItem","className","name","Item","rules","required","message","prefix","UserOutlined","placeholder","onPressEnter","autoFocus","Password","LockOutlined","type","valuePropName","noStyle","onClick","prev","routes","route","path","icon","BarChartOutlined","component","BankOutlined","BranchesOutlined","SmileOutlined","PaperClipOutlined","DollarOutlined","FileOutlined","ScissorOutlined","location","pathname","RoomStatus","roomData","setRoomData","stillEmptyNumber","filter","room","stillEmpty","fetchRoomData","useEffect","pieConfig","appendPadding","angleField","colorField","radius","label","offset","content","_ref","percent","concat","toFixed","style","fontSize","textAlign","interactions","marginTop","display","justifyContent","width","Title","level","Revenue","agreementData","setAgreementData","monthValue","setMonthValue","fetchAgreementData","agreement","agreements","Promise","all","map","get","roomId","kindOfRoom","kindOfRoomId","filteredAgreementData","moment","isSameOrBefore","date","isSameOrAfter","lineConfig","Array","from","diff","_","index","month","format","price","reduce","b","xField","yField","point","size","shape","fill","stroke","lineWidth","tooltip","showMarkers","state","active","shadowBlur","RangePicker","picker","marginBottom","ranges","startOf","endOf","onChange","valueOf","Analysis","PageContainer","header","title","ghost","gutter","colSpan","RoomPage","changeTourStep","visibleModal","setVisibleModal","rowData","setRowData","edit","setEdit","foreignKey","setForeignKey","fetchForeignKeyData","stillEmptyValueFormatter","params","extra","setTimeout","height","innerHeight","animateRows","defaultColDef","floatingFilter","sortable","columnDefs","headerName","field","filterParams","valueFormatter","pinned","cellRendererFramework","setFieldsValue","EditOutlined","marginRight","DeleteOutlined","danger","warning","onOk","code","delete","find","visible","centered","cancelText","update","updated","onCancel","labelCol","span","wrapperCol","optionLabelProp","Option","KindOfRoomGrid","forwardRef","ref","getKindOfRoomModalRef","formatter","Intl","NumberFormat","currency","fetchData","useImperativeHandle","handleDelete","getForm","openModal","handleEdit","KindOfRoomModal","setVisible","replace","parser","KindOfRoomPage","kindOfRoomGridRef","useRef","kindOfRoomModalRef","current","CustomerPage","customer","dateOfBirthValueFormatter","dateOfBirth","rest","fullName","initialValues","sex","Group","AgreementPage","resizable","tempDate","JSON","parse","stringify","formatDate","customerIds","includes","join","usedCustomers","customerId","mode","UnitPricePage","unitPrice","dateValueFormatter","isAfter","BillPage","bill","groupMultiAutoColumn","enableRangeSelection","rowGroup","hide","electricityBill","electricity","amountOfElectricity","waterBill","water","amountOfWater","parkingFee","parking","numberOfVehicles","junkMoney","total","EquipmentRoom","equipment","Dashboard","tourStep","setTourStep","isTourOpen","setIsTourOpen","setPathname","confirm","handleUserMenuClick","e","key","removeItem","logo","rightContentRender","overlay","LogoutOutlined","menuItemRender","item","dom","to","fixSiderbar","render","steps","selector","disableFocusLock","showCloseButton","showButtons","showNavigation","goToStep","isOpen","disableKeyboardNavigation","onRequestClose","App","basename","routeProps","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","LicenseManager","setLicenseKey","Dexie","version","stores","ReactDOM","StrictMode","locale","viVN","document","getElementById"],"mappings":"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","file":"static/js/main.23a1af76.chunk.js","sourcesContent":["import { createContext, FC, useState } from 'react';\nimport { verify } from 'jsonwebtoken';\nimport { getTokenEncryptSecret } from '../utils/getTokenEncryptSecret';\n\ninterface AuthenticationContextProps {\n  authenticate: boolean;\n  setAuthenticate: React.Dispatch<any>;\n}\n\nexport const AuthenticationContext = createContext<AuthenticationContextProps>({\n  authenticate: false,\n  setAuthenticate: () => {}\n});\n\nconst AuthenticationProvider: FC = ({ children }) => {\n  const token = localStorage.getItem('access-token');\n  const [authenticate, setAuthenticate] = useState<any>(\n    !!token && verify(token, getTokenEncryptSecret())\n  );\n\n  return (\n    <AuthenticationContext.Provider\n      value={{\n        authenticate,\n        setAuthenticate\n      }}\n    >\n      {children}\n    </AuthenticationContext.Provider>\n  );\n};\n\nexport default AuthenticationProvider;\n","export const getTokenEncryptSecret = () => 's3cr3t!@#';\n","/* eslint jsx-a11y/anchor-is-valid:0 */\nimport { FC, useContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Form, Button, Input, Checkbox, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { sign } from 'jsonwebtoken';\nimport { hashSync, compareSync } from 'bcryptjs';\nimport { RouteComponentProps, StaticContext } from 'react-router';\nimport { AuthenticationContext } from '../authentication-provider';\nimport { getTokenEncryptSecret } from '../utils/getTokenEncryptSecret';\nimport { getPasswordHashSalt } from '../utils/getPasswordHashSalt';\nimport './style';\n\ninterface LoginPageProps extends RouteComponentProps<{}, StaticContext, unknown> {}\n\nconst LoginPage: FC<LoginPageProps> = () => {\n  const [form] = Form.useForm<Omit<IAccount, 'id'> & { remember: boolean }>();\n  const [registration, setRegistration] = useState(false);\n  const { setAuthenticate } = useContext(AuthenticationContext);\n  const db = window.roomManagementSystemDB;\n\n  const handleLogin = () => {\n    form.validateFields().then(async ({ username, password, remember }) => {\n      const data = await db!.account!.where('username').equals(username).toArray();\n\n      if (registration) {\n        if (data.length > 0) {\n          message.error('Tài khoản đã tồn tại!');\n        } else {\n          db!\n            .account!.add({\n              id: uuidv4(),\n              username,\n              password: hashSync(password, getPasswordHashSalt())\n            })\n            .then(() => {\n              message.success('Tạo tài khoản thành công!');\n              setRegistration(false);\n              form.resetFields();\n            });\n        }\n      } else {\n        if (data.length > 0 && compareSync(password, data[0].password)) {\n          const token = sign({ username, password }, getTokenEncryptSecret(), {\n            expiresIn: '7d'\n          });\n          setAuthenticate(true);\n          if (remember) {\n            localStorage.setItem('access-token', token);\n          }\n        } else {\n          message.error('Tên đăng nhập hoặc mật khẩu sai!');\n        }\n      }\n    });\n  };\n\n  return (\n    <div className='login-page'>\n      <div className='login-box'>\n        <div className='login-title'>{registration ? 'Đăng kí' : 'Đăng nhập'}</div>\n\n        <Form name='normal_login' className='login-form' form={form}>\n          <Form.Item\n            name='username'\n            rules={[{ required: true, message: 'Hãy nhập tên đăng nhập của bạn!' }]}\n          >\n            <Input\n              prefix={<UserOutlined className='site-form-item-icon' />}\n              placeholder='Tên đăng nhập'\n              onPressEnter={handleLogin}\n              autoFocus\n            />\n          </Form.Item>\n\n          <Form.Item\n            name='password'\n            rules={[{ required: true, message: 'Hãy nhập mật khẩu của bạn!' }]}\n          >\n            <Input.Password\n              prefix={<LockOutlined className='site-form-item-icon' />}\n              type='password'\n              placeholder='Mật khẩu'\n              onPressEnter={handleLogin}\n            />\n          </Form.Item>\n\n          {registration || (\n            <Form.Item>\n              <Form.Item name='remember' valuePropName='checked' noStyle>\n                <Checkbox>Giữ tôi luôn đăng nhập</Checkbox>\n              </Form.Item>\n\n              <a className='login-form-forgot'>Quên mật khẩu</a>\n            </Form.Item>\n          )}\n\n          <Form.Item>\n            <Button type='primary' onClick={handleLogin} className='login-form-button'>\n              {registration ? 'Đăng kí' : 'Đăng nhập'}\n            </Button>\n          </Form.Item>\n\n          <Form.Item noStyle>\n            Hoặc{' '}\n            <a\n              onClick={() => {\n                setRegistration(prev => !prev);\n                form.resetFields();\n              }}\n            >\n              {registration ? 'đăng nhập' : 'đăng kí ngay!'}\n            </a>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","export const getPasswordHashSalt = () => 11;\n","import {\n  BarChartOutlined,\n  BankOutlined,\n  BranchesOutlined,\n  SmileOutlined,\n  PaperClipOutlined,\n  DollarOutlined,\n  FileOutlined,\n  ScissorOutlined\n} from '@ant-design/icons';\n\nexport const routes = {\n  route: {\n    path: '/',\n    routes: [\n      {\n        path: '/analysis',\n        name: 'Thống kê',\n        icon: <BarChartOutlined />,\n        component: './Analysis'\n      },\n      {\n        path: '/room',\n        name: 'Quản lý phòng',\n        icon: <BankOutlined />,\n        component: './Room'\n      },\n      {\n        path: '/kind-of-room',\n        name: 'Quản lý loại phòng',\n        icon: <BranchesOutlined />,\n        component: './KindOfRoom'\n      },\n      {\n        path: '/customer',\n        name: 'Quản lý khách hàng',\n        icon: <SmileOutlined />,\n        component: './Customer'\n      },\n      {\n        path: '/agreement',\n        name: 'Quản lý hợp đồng',\n        icon: <PaperClipOutlined />,\n        component: './Agreement'\n      },\n      {\n        path: '/unit-price',\n        name: 'Quản lý đơn giá',\n        icon: <DollarOutlined />,\n        component: './UnitPrice'\n      },\n      {\n        path: '/bill',\n        name: 'Quản lý hóa đơn',\n        icon: <FileOutlined />,\n        component: './Bill'\n      },\n      {\n        path: '/equipment',\n        name: 'Quản lý trang thiết bị',\n        icon: <ScissorOutlined />,\n        component: './Equipment'\n      }\n    ]\n  },\n  location: {\n    pathname: '/'\n  }\n};\n","import { FC, useEffect, useState } from 'react';\nimport { Typography } from 'antd';\nimport Pie from '@ant-design/charts/es/pie';\n\nconst RoomStatus: FC = () => {\n  const db = window.roomManagementSystemDB;\n  const [roomData, setRoomData] = useState<IRoom[]>([]);\n  const stillEmptyNumber = roomData.filter(room => !room.stillEmpty).length;\n\n  const fetchRoomData = async () => {\n    setRoomData(await db!.room!.toArray());\n  };\n\n  useEffect(() => {\n    fetchRoomData();\n    // eslint-disable-next-line\n  }, []);\n\n  const pieData = [\n    {\n      type: 'Còn trống',\n      value: stillEmptyNumber\n    },\n    {\n      type: 'Có khách ở',\n      value: roomData.length - stillEmptyNumber\n    }\n  ];\n\n  const pieConfig = {\n    appendPadding: 10,\n    data: pieData,\n    angleField: 'value',\n    colorField: 'type',\n    radius: 0.9,\n    label: {\n      type: 'inner',\n      offset: '-30%',\n      content: function content(_ref: any) {\n        var percent = _ref.percent;\n        return ''.concat((percent * 100).toFixed(0), '%');\n      },\n      style: {\n        fontSize: 14,\n        textAlign: 'center'\n      }\n    },\n    interactions: [{ type: 'element-active' }]\n  };\n\n  return (\n    <>\n      <Pie {...pieConfig} />\n\n      <div style={{ marginTop: 24, display: 'flex', justifyContent: 'center', width: '100%' }}>\n        <Typography.Title level={4}>Tình trạng phòng</Typography.Title>\n      </div>\n    </>\n  );\n};\n\nexport default RoomStatus;\n","import { FC, useEffect, useState } from 'react';\nimport { Typography, DatePicker } from 'antd';\nimport moment from 'moment';\nimport Line from '@ant-design/charts/es/line';\n\ntype ICustomRoom = IRoom & { kindOfRoom: IKindOfRoom };\n\ntype ICustomAgreements = (IAgreement & { room: ICustomRoom })[];\n\nconst Revenue: FC = () => {\n  const db = window.roomManagementSystemDB;\n  const [agreementData, setAgreementData] = useState<ICustomAgreements>([]);\n  const [monthValue, setMonthValue] = useState<number[]>([]);\n\n  const fetchAgreementData = async () => {\n    const agreements = (await db!.agreement!.toArray()) as ICustomAgreements;\n    await Promise.all(\n      agreements.map(async agreement => {\n        [agreement.room] = (await Promise.all([db!.room!.get(agreement.roomId)])) as ICustomRoom[];\n\n        [agreement.room!.kindOfRoom] = (await Promise.all([\n          db!.kindOfRoom!.get(agreement.room.kindOfRoomId)\n        ])) as IKindOfRoom[];\n      })\n    );\n    setAgreementData(agreements);\n  };\n\n  useEffect(() => {\n    fetchAgreementData();\n    // eslint-disable-next-line\n  }, []);\n\n  const filteredAgreementData = agreementData.filter(\n    agreement =>\n      moment(monthValue[0]).isSameOrBefore(agreement.date[0]) ||\n      moment(monthValue[1]).isSameOrAfter(agreement.date[0])\n  );\n\n  const lineData =\n    monthValue.length > 0\n      ? Array.from({\n          length: moment(monthValue[1]).diff(moment(monthValue[0]), 'months') + 1\n        }).map((_, index) => ({\n          month: moment(monthValue[0]).add(index, 'month').format('MM/YYYY'),\n          value: filteredAgreementData\n            .filter(agreement =>\n              moment(monthValue[0]).add(index, 'month').isSameOrBefore(agreement.date[1])\n            )\n            .map(agreement => agreement.room.kindOfRoom.price)\n            .reduce((a, b) => a + b, 0)\n        }))\n      : [];\n\n  const lineConfig = {\n    data: lineData,\n    xField: 'month',\n    yField: 'value',\n    label: {},\n    point: {\n      size: 5,\n      shape: 'diamond',\n      style: {\n        fill: 'white',\n        stroke: '#5B8FF9',\n        lineWidth: 2\n      }\n    },\n    tooltip: { showMarkers: false },\n    state: {\n      active: {\n        style: {\n          shadowBlur: 4,\n          stroke: '#000',\n          fill: 'red'\n        }\n      }\n    },\n    interactions: [{ type: 'marker-active' }]\n  };\n\n  return (\n    <>\n      <DatePicker.RangePicker\n        picker='month'\n        style={{ width: 400, marginBottom: 24 }}\n        format={['MM/YYYY', 'MM/YYYY']}\n        ranges={{\n          '1 tháng': [moment().startOf('months'), moment().endOf('months')],\n          '3 tháng': [moment().startOf('months'), moment().add(3, 'months').endOf('months')],\n          '6 tháng': [moment().startOf('months'), moment().add(6, 'months').endOf('months')],\n          '1 năm': [moment().startOf('months'), moment().add(12, 'months').endOf('months')]\n        }}\n        onChange={value => {\n          setMonthValue([value![0]!.valueOf(), value![1]!.valueOf()]);\n        }}\n      />\n\n      <Line {...lineConfig} />\n\n      <div style={{ marginTop: 24, display: 'flex', justifyContent: 'center', width: '100%' }}>\n        <Typography.Title level={4}>Doanh thu</Typography.Title>\n      </div>\n    </>\n  );\n};\n\nexport default Revenue;\n","import { FC } from 'react';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport ProCard from '@ant-design/pro-card';\nimport RoomStatus from './RoomStatus';\nimport Revenue from './Revenue';\n\nconst Analysis: FC = () => (\n  <PageContainer header={{ title: 'Thống kê' }}>\n    <ProCard ghost gutter={[24, 0]}>\n      <ProCard colSpan={8}>\n        <RoomStatus />\n      </ProCard>\n\n      <ProCard colSpan={16}>\n        <Revenue />\n      </ProCard>\n    </ProCard>\n  </PageContainer>\n);\n\nexport default Analysis;\n","import { Dispatch, FC, SetStateAction, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Button, Modal, Form, Input, message, Tooltip, Select } from 'antd';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport ProCard from '@ant-design/pro-card';\nimport { AgGridReact } from 'ag-grid-react';\nimport { ValueFormatterParams } from 'ag-grid-community';\n\ninterface IForeignKey {\n  kindOfRoom: IKindOfRoom[];\n}\n\nexport interface RoomPageProps {\n  changeTourStep: Dispatch<SetStateAction<number>>;\n}\n\nconst RoomPage: FC<RoomPageProps> = ({ changeTourStep }) => {\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [rowData, setRowData] = useState<IRoom[]>([]);\n  const [edit, setEdit] = useState('');\n  const [foreignKey, setForeignKey] = useState<IForeignKey>({\n    kindOfRoom: []\n  });\n  const [form] = Form.useForm<Omit<IRoom, 'id'>>();\n  const db = window.roomManagementSystemDB;\n\n  const fetchRoomData = async () => {\n    setRowData(await db!.room!.toArray());\n  };\n\n  const fetchForeignKeyData = async () => {\n    const kindOfRoom = await db!.kindOfRoom!.toArray();\n    setForeignKey({\n      kindOfRoom\n    });\n  };\n\n  useEffect(() => {\n    fetchRoomData();\n    fetchForeignKeyData();\n    // eslint-disable-next-line\n  }, []);\n\n  const handleEdit = (data: IRoom) => {\n    setEdit(data.id);\n    setVisibleModal(true);\n    form.setFieldsValue(data);\n  };\n\n  const handleModalOk = () => {\n    form.validateFields().then(async value => {\n      const data = await db!.room!.where('code').equals(value.code).toArray();\n\n      if (data.filter(({ id }) => (edit ? edit !== id : id)).length > 0) {\n        message.error(`Phòng ${value.name} đã tồn tại!`);\n        return;\n      }\n\n      if (edit) {\n        db!.room!.update(edit, value).then(updated => {\n          if (updated) {\n            message.success('Cập nhật thành công!');\n            setVisibleModal(false);\n            setEdit('');\n            form.resetFields();\n            fetchRoomData();\n          } else {\n            message.error('Cập nhật thất bại!');\n          }\n        });\n        return;\n      }\n\n      db!\n        .room!.add({\n          id: uuidv4(),\n          ...value\n        })\n        .then(() => {\n          message.success('Tạo thành công!');\n          setVisibleModal(false);\n          form.resetFields();\n          fetchRoomData();\n        });\n    });\n\n    setTimeout(() => {\n      changeTourStep(6);\n    }, 200);\n  };\n\n  const handleModalCancel = () => {\n    setVisibleModal(false);\n    setEdit('');\n    form.resetFields();\n  };\n\n  const handleDeleteData = (data: IRoom) => {\n    Modal.warning({\n      title: `Bạn có muốn xóa phòng ${data.name}?`,\n      onOk: () => {\n        db!\n          .room!.where('code')\n          .equals(data.code)\n          .delete()\n          .then(() => {\n            message.success(`Xóa thành công!`);\n            fetchRoomData();\n          });\n      }\n    });\n  };\n\n  const stillEmptyValueFormatter = (params: ValueFormatterParams) =>\n    !params.value ? 'Có' : 'Không';\n\n  return (\n    <>\n      <PageContainer\n        extra={[\n          <Button\n            type='primary'\n            onClick={() => {\n              setVisibleModal(true);\n              setTimeout(() => {\n                changeTourStep(5);\n              }, 200);\n            }}\n          >\n            Thêm mới\n          </Button>\n        ]}\n        header={{ title: 'Quản lý phòng' }}\n      >\n        <ProCard style={{ height: window.innerHeight - 168 }} className='ag-theme-alpine'>\n          <AgGridReact\n            animateRows\n            defaultColDef={{ floatingFilter: true, sortable: true, filter: true }}\n            columnDefs={[\n              { headerName: 'Mã', field: 'code', filter: 'agTextColumnFilter' },\n              { headerName: 'Tên', field: 'name', filter: 'agTextColumnFilter' },\n              {\n                headerName: 'Loại',\n                field: 'kindOfRoom',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Còn trống',\n                field: 'stillEmpty',\n                filterParams: {\n                  valueFormatter: stillEmptyValueFormatter\n                },\n                valueFormatter: stillEmptyValueFormatter\n              },\n              {\n                pinned: 'right',\n                field: '',\n                width: 100,\n                floatingFilter: false,\n                cellRendererFramework: (params: any) => (\n                  <>\n                    <Tooltip title='Chỉnh sửa'>\n                      <Button\n                        onClick={() => handleEdit(params.data)}\n                        icon={<EditOutlined />}\n                        style={{ marginRight: 8 }}\n                        type='primary'\n                      />\n                    </Tooltip>\n\n                    <Tooltip title='Xóa'>\n                      <Button\n                        icon={<DeleteOutlined />}\n                        danger\n                        onClick={() => handleDeleteData(params.data)}\n                      />\n                    </Tooltip>\n                  </>\n                )\n              }\n            ]}\n            rowData={rowData.map(data => ({\n              kindOfRoom: foreignKey.kindOfRoom!.find(type => type.id === data.kindOfRoomId)?.name,\n              ...data\n            }))}\n          />\n        </ProCard>\n      </PageContainer>\n\n      <Modal\n        visible={visibleModal}\n        title={edit ? 'Chỉnh sửa' : 'Thêm phòng mới'}\n        centered\n        cancelText='Hủy'\n        onOk={handleModalOk}\n        onCancel={handleModalCancel}\n      >\n        <Form name='add-form' form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\n          <Form.Item label='Mã' name='code' rules={[{ required: true, message: 'Hãy nhập mã!' }]}>\n            <Input autoFocus />\n          </Form.Item>\n\n          <Form.Item label='Tên' name='name' rules={[{ required: true, message: 'Hãy nhập tên!' }]}>\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label='Loại phòng'\n            name='kindOfRoomId'\n            rules={[{ required: true, message: 'Hãy chọn loại phòng!' }]}\n            style={{ marginBottom: 0 }}\n          >\n            <Select optionLabelProp='label'>\n              {foreignKey.kindOfRoom!.map(type => (\n                <Select.Option value={type.id} key={type.id} label={type.name}>\n                  {type.name} ({type.price})\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default RoomPage;\n","import { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Button, Tooltip, Modal, message } from 'antd';\nimport ProCard from '@ant-design/pro-card';\nimport { AgGridReact } from 'ag-grid-react';\nimport { KindOfRoomGridProps, KindOfRoomGridRef } from './interface';\n\nconst KindOfRoomGrid = forwardRef<KindOfRoomGridRef, KindOfRoomGridProps>(\n  ({ getKindOfRoomModalRef, edit }, ref) => {\n    const db = window.roomManagementSystemDB;\n    const [rowData, setRowData] = useState<IKindOfRoom[]>([]);\n    const formatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'VND'\n    });\n\n    const fetchData = async () => {\n      setRowData(await db!.kindOfRoom!.toArray());\n    };\n\n    useImperativeHandle(ref, () => ({\n      fetchData\n    }));\n\n    useEffect(() => {\n      fetchData();\n      // eslint-disable-next-line\n    }, []);\n\n    const handleDelete = async (data: IKindOfRoom) => {\n      const room = await db!.room!.where({ kindOfRoomId: data.id }).toArray();\n\n      if (room.length > 0) {\n        message.error('Bạn không thể  loại phòng vì có phòng đã sử dụng');\n        return;\n      }\n\n      Modal.warning({\n        title: `Bạn có muốn xóa loại phòng ${data.name}?`,\n        onOk: () => {\n          db!\n            .kindOfRoom!.where('code')\n            .equals(data.code)\n            .delete()\n            .then(() => {\n              message.success(`Xóa thành công!`);\n              fetchData();\n            });\n        }\n      });\n    };\n\n    const handleEdit = (data: IKindOfRoom) => {\n      const { getForm, openModal } = getKindOfRoomModalRef();\n      edit(data.id);\n      openModal();\n      getForm().setFieldsValue(data);\n    };\n\n    return (\n      <ProCard style={{ height: window.innerHeight - 168 }} className='ag-theme-alpine'>\n        <AgGridReact\n          animateRows\n          defaultColDef={{ floatingFilter: true, sortable: true, filter: true }}\n          columnDefs={[\n            { headerName: 'Mã', field: 'code', filter: 'agTextColumnFilter' },\n            {\n              headerName: 'Tên',\n              field: 'name',\n              filter: 'agTextColumnFilter'\n            },\n            {\n              headerName: 'Giá',\n              field: 'price',\n              valueFormatter: params => formatter.format(params.value),\n              filter: 'agTextColumnFilter'\n            },\n            {\n              headerName: 'Tiền cọc',\n              field: 'deposit',\n              valueFormatter: params => formatter.format(params.value),\n              filter: 'agTextColumnFilter'\n            },\n            {\n              pinned: 'right',\n              field: '',\n              width: 100,\n              floatingFilter: false,\n              cellRendererFramework: (params: any) => (\n                <>\n                  <Tooltip title='Chỉnh sửa'>\n                    <Button\n                      onClick={() => handleEdit(params.data)}\n                      icon={<EditOutlined />}\n                      style={{ marginRight: 8 }}\n                      type='primary'\n                    />\n                  </Tooltip>\n\n                  <Tooltip title='Xóa'>\n                    <Button\n                      icon={<DeleteOutlined />}\n                      danger\n                      onClick={() => handleDelete(params.data)}\n                    />\n                  </Tooltip>\n                </>\n              )\n            }\n          ]}\n          rowData={rowData}\n        />\n      </ProCard>\n    );\n  }\n);\n\nexport default KindOfRoomGrid;\n","import { forwardRef, useImperativeHandle, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Modal, Form, InputNumber, Input, message } from 'antd';\nimport { KindOfRoomModalProps, KindOfRoomModalRef } from './interface';\n\nconst KindOfRoomModal = forwardRef<KindOfRoomModalRef, KindOfRoomModalProps>(\n  ({ edit, onOk, onCancel }, ref) => {\n    const [visible, setVisible] = useState(false);\n    const [form] = Form.useForm<Omit<IKindOfRoom, 'id'>>();\n    const db = window.roomManagementSystemDB;\n\n    useImperativeHandle(ref, () => ({\n      getForm: () => form,\n      openModal: () => setVisible(true)\n    }));\n\n    const handleOk = () => {\n      form.validateFields().then(async value => {\n        const data = await db!.kindOfRoom!.where('code').equals(value.code).toArray();\n\n        if (data.filter(({ id }) => (edit ? edit !== id : id)).length > 0) {\n          message.error(`Loại phòng ${value.name} đã tồn tại!`);\n          return;\n        }\n\n        if (edit) {\n          db!.kindOfRoom!.update(edit, value).then(updated => {\n            if (updated) {\n              message.success('Cập nhật thành công!');\n              setVisible(false);\n              form.resetFields();\n              onOk();\n            } else {\n              message.error('Cập nhật thất bại!');\n            }\n          });\n          return;\n        }\n\n        db!\n          .kindOfRoom!.add({\n            id: uuidv4(),\n            ...value\n          })\n          .then(() => {\n            message.success('Tạo thành công!');\n            setVisible(false);\n            form.resetFields();\n            onOk();\n          });\n      });\n    };\n\n    const handleCancel = () => {\n      setVisible(false);\n      form.resetFields();\n      onCancel();\n    };\n\n    return (\n      <Modal\n        visible={visible}\n        title={edit ? 'Chỉnh sửa' : 'Thêm loại phòng mới'}\n        centered\n        cancelText='Hủy'\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <Form name='add-form' form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\n          <Form.Item label='Mã' name='code' rules={[{ required: true, message: 'Hãy nhập mã!' }]}>\n            <Input autoFocus />\n          </Form.Item>\n\n          <Form.Item label='Tên' name='name' rules={[{ required: true, message: 'Hãy nhập tên!' }]}>\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label='Giá'\n            name='price'\n            rules={[{ required: true, message: 'Hãy nhập giá!' }]}\n          >\n            <InputNumber\n              style={{ width: '100%' }}\n              formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n              parser={value => value!.replace(/\\s?VNĐ|(,*)/g, '')}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label='Tiền cọc'\n            name='deposit'\n            rules={[{ required: true, message: 'Hãy nhập tiền cọc!' }]}\n            style={{ marginBottom: 0 }}\n          >\n            <InputNumber\n              style={{ width: '100%' }}\n              formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n              parser={value => value!.replace(/\\s?VNĐ|(,*)/g, '')}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n);\n\nexport default KindOfRoomModal;\n","import { FC, RefObject, useRef, useState } from 'react';\nimport { Button } from 'antd';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport KindOfRoomGrid from './Grid';\nimport KindOfRoomModal from './Modal';\nimport { KindOfRoomGridRef, KindOfRoomModalRef, KindOfRoomPageProps } from './interface';\n\nconst KindOfRoomPage: FC<KindOfRoomPageProps> = ({ changeTourStep }) => {\n  const [edit, setEdit] = useState('');\n  const kindOfRoomGridRef: RefObject<KindOfRoomGridRef> = useRef(null);\n  const kindOfRoomModalRef: RefObject<KindOfRoomModalRef> = useRef(null);\n\n  return (\n    <PageContainer\n      extra={[\n        <Button\n          type='primary'\n          onClick={() => {\n            kindOfRoomModalRef.current!.openModal();\n            setTimeout(() => {\n              changeTourStep(2);\n            }, 200);\n          }}\n        >\n          Thêm mới\n        </Button>\n      ]}\n      header={{ title: 'Quản lý loại phòng' }}\n    >\n      <KindOfRoomGrid\n        edit={id => setEdit(id)}\n        ref={kindOfRoomGridRef}\n        getKindOfRoomModalRef={() => kindOfRoomModalRef.current!}\n      />\n      <KindOfRoomModal\n        ref={kindOfRoomModalRef}\n        edit={edit}\n        onCancel={() => setEdit('')}\n        onOk={() => {\n          if (edit) {\n            setEdit('');\n          }\n          kindOfRoomGridRef.current!.fetchData();\n\n          setTimeout(() => {\n            changeTourStep(3);\n          }, 300);\n        }}\n      />\n    </PageContainer>\n  );\n};\n\nexport default KindOfRoomPage;\n","import { FC, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Button, Modal, Form, Input, message, Tooltip, InputNumber, DatePicker, Radio } from 'antd';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport ProCard from '@ant-design/pro-card';\nimport { AgGridReact } from 'ag-grid-react';\nimport { ValueFormatterParams } from 'ag-grid-community';\n\nconst CustomerPage: FC = () => {\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [rowData, setRowData] = useState<ICustomer[]>([]);\n  const [edit, setEdit] = useState('');\n  const [form] = Form.useForm<\n    Omit<ICustomer, 'id' | 'dateOfBirth'> & { dateOfBirth: moment.Moment }\n  >();\n  const db = window.roomManagementSystemDB;\n\n  const fetchData = async () => {\n    setRowData(await db!.customer!.toArray());\n  };\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  const handleEdit = ({ dateOfBirth, ...rest }: ICustomer) => {\n    setEdit(rest.id);\n    setVisibleModal(true);\n    form.setFieldsValue({ dateOfBirth: dateOfBirth && moment(dateOfBirth), ...rest });\n  };\n\n  const handleModalOk = () => {\n    form.validateFields().then(async ({ dateOfBirth, ...rest }) => {\n      const data = await db!.customer!.where('code').equals(rest.code).toArray();\n      const value = { dateOfBirth: dateOfBirth?.valueOf(), ...rest };\n\n      if (data.filter(({ id }) => (edit ? edit !== id : id)).length > 0) {\n        message.error(`Khách hàng ${rest.fullName} đã tồn tại!`);\n        return;\n      }\n\n      if (edit) {\n        db!.customer!.update(edit, value).then(updated => {\n          if (updated) {\n            message.success('Cập nhật thành công!');\n            setVisibleModal(false);\n            setEdit('');\n            form.resetFields();\n            fetchData();\n          } else {\n            message.error('Cập nhật thất bại!');\n          }\n        });\n        return;\n      }\n\n      db!\n        .customer!.add({\n          id: uuidv4(),\n          ...value\n        })\n        .then(() => {\n          message.success('Tạo thành công!');\n          setVisibleModal(false);\n          form.resetFields();\n          fetchData();\n        });\n    });\n  };\n\n  const handleModalCancel = () => {\n    setVisibleModal(false);\n    setEdit('');\n    form.resetFields();\n  };\n\n  const handleDeleteData = (data: ICustomer) => {\n    Modal.warning({\n      title: `Bạn có muốn xóa khách hàng ${data.fullName}?`,\n      onOk: () => {\n        db!\n          .customer!.where('code')\n          .equals(data.code)\n          .delete()\n          .then(() => {\n            message.success(`Xóa thành công!`);\n            fetchData();\n          });\n      }\n    });\n  };\n\n  const dateOfBirthValueFormatter = (params: ValueFormatterParams) =>\n    params.value && moment(+params.value).format('DD/MM/YYYY');\n\n  return (\n    <>\n      <PageContainer\n        extra={[\n          <Button type='primary' onClick={() => setVisibleModal(true)}>\n            Thêm mới\n          </Button>\n        ]}\n        header={{ title: 'Quản lý khách hàng' }}\n      >\n        <ProCard style={{ height: window.innerHeight - 168 }} className='ag-theme-alpine'>\n          <AgGridReact\n            animateRows\n            defaultColDef={{ floatingFilter: true, sortable: true, filter: true }}\n            columnDefs={[\n              { headerName: 'Mã', field: 'code', filter: 'agTextColumnFilter' },\n              {\n                headerName: 'Họ và tên',\n                field: 'fullName',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Số CMND',\n                field: 'identityCardNumber',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Ngày sinh',\n                field: 'dateOfBirth',\n                filterParams: {\n                  valueFormatter: dateOfBirthValueFormatter\n                },\n                valueFormatter: dateOfBirthValueFormatter\n              },\n              {\n                headerName: 'Giới tính',\n                field: 'sex',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Địa chỉ',\n                field: 'address',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Số điện thoại',\n                field: 'phoneNumber',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Nghề nghiệp',\n                field: 'job',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                pinned: 'right',\n                field: '',\n                width: 100,\n                floatingFilter: false,\n                cellRendererFramework: (params: any) => (\n                  <>\n                    <Tooltip title='Chỉnh sửa'>\n                      <Button\n                        onClick={() => handleEdit(params.data)}\n                        icon={<EditOutlined />}\n                        style={{ marginRight: 8 }}\n                        type='primary'\n                      />\n                    </Tooltip>\n\n                    <Tooltip title='Xóa'>\n                      <Button\n                        icon={<DeleteOutlined />}\n                        danger\n                        onClick={() => handleDeleteData(params.data)}\n                      />\n                    </Tooltip>\n                  </>\n                )\n              }\n            ]}\n            rowData={rowData}\n          />\n        </ProCard>\n      </PageContainer>\n\n      <Modal\n        visible={visibleModal}\n        title={edit ? 'Chỉnh sửa' : 'Thêm khách hàng mới'}\n        centered\n        cancelText='Hủy'\n        onOk={handleModalOk}\n        onCancel={handleModalCancel}\n      >\n        <Form\n          name='add-form'\n          form={form}\n          labelCol={{ span: 6 }}\n          wrapperCol={{ span: 18 }}\n          initialValues={{ sex: 'Nam' }}\n        >\n          <Form.Item label='Mã' name='code' rules={[{ required: true, message: 'Hãy nhập mã!' }]}>\n            <Input autoFocus />\n          </Form.Item>\n\n          <Form.Item\n            label='Họ và tên'\n            name='fullName'\n            rules={[{ required: true, message: 'Hãy nhập họ và tên!' }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label='Số CMND'\n            name='identityCardNumber'\n            rules={[{ required: true, message: 'Hãy nhập số CMND!' }]}\n          >\n            <InputNumber style={{ width: '100%' }} />\n          </Form.Item>\n\n          <Form.Item label='Ngày sinh' name='dateOfBirth'>\n            <DatePicker style={{ width: '100%' }} format='DD/MM/YYYY' />\n          </Form.Item>\n\n          <Form.Item label='Giới tính' name='sex'>\n            <Radio.Group>\n              <Radio value='Nam'>Nam</Radio>\n              <Radio value='Nữ'>Nữ</Radio>\n              <Radio value='Khác'>Khác</Radio>\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item label='Địa chỉ' name='address'>\n            <Input />\n          </Form.Item>\n\n          <Form.Item label='Số điện thoại' name='phoneNumber'>\n            <InputNumber style={{ width: '100%' }} />\n          </Form.Item>\n\n          <Form.Item label='Nghề nghiệp' name='job' style={{ marginBottom: 0 }}>\n            <Input />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default CustomerPage;\n","import { FC, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Button, Modal, Form, Input, message, Tooltip, Select, DatePicker } from 'antd';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport ProCard from '@ant-design/pro-card';\nimport { AgGridReact } from 'ag-grid-react';\nimport moment from 'moment';\n\ninterface IForeignKey {\n  room: IRoom[];\n  customer: ICustomer[];\n}\n\nconst AgreementPage: FC = () => {\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [rowData, setRowData] = useState<IAgreement[]>([]);\n  const [edit, setEdit] = useState('');\n  const [form] = Form.useForm<Omit<IAgreement, 'id'>>();\n  const [foreignKey, setForeignKey] = useState<IForeignKey>({\n    room: [],\n    customer: []\n  });\n  const db = window.roomManagementSystemDB;\n\n  const fetchData = async () => {\n    setRowData(await db!.agreement!.toArray());\n  };\n\n  const fetchForeignKeyData = async () => {\n    const room = await db!.room!.toArray();\n    const customer = await db!.customer!.toArray();\n    setForeignKey({\n      room,\n      customer\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n    fetchForeignKeyData();\n    // eslint-disable-next-line\n  }, []);\n\n  const handleEdit = ({ date, ...rest }: Omit<IAgreement, 'date'> & { date: string }) => {\n    const tempDate = JSON.parse(date);\n    setEdit(rest.id);\n    setVisibleModal(true);\n    form.setFieldsValue({\n      date: [moment(tempDate[0]), moment(tempDate[1])],\n      ...rest\n    });\n  };\n\n  const handleModalOk = () => {\n    form.validateFields().then(async ({ date, ...rest }) => {\n      const value = { date: [date[0].valueOf(), date[1].valueOf()], ...rest };\n\n      const data = await db!.agreement!.where('code').equals(value.code).toArray();\n\n      if (data.filter(({ id }) => (edit ? edit !== id : id)).length > 0) {\n        message.error(`Hợp đồng ${value.code} đã tồn tại!`);\n        return;\n      }\n\n      const usedCustomers = rowData\n        .filter(agreement => (edit ? edit !== agreement.id : agreement.id))\n        .filter(\n          agreement =>\n            agreement.customerIds.filter(customerId => value.customerIds.includes(customerId))\n              .length > 0\n        );\n\n      const usedRooms = rowData\n        .filter(agreement => (edit ? edit !== agreement.id : agreement.id))\n        .filter(agreement => agreement.roomId === value.roomId);\n\n      if (usedRooms.length > 0) {\n        message.error(`Phòng đã được sử dụng!`);\n        return;\n      }\n\n      if (usedCustomers.length > 0) {\n        message.error(`Có khách hàng đang ở phòng khác!`);\n        return;\n      }\n\n      if (edit) {\n        db!.agreement!.update(edit, value).then(updated => {\n          if (updated) {\n            message.success('Cập nhật thành công!');\n            setVisibleModal(false);\n            setEdit('');\n            form.resetFields();\n            fetchData();\n          } else {\n            message.error('Cập nhật thất bại!');\n          }\n        });\n        return;\n      }\n\n      db!\n        .agreement!.add({\n          id: uuidv4(),\n          ...value\n        })\n        .then(async () => {\n          message.success('Tạo thành công!');\n          setVisibleModal(false);\n          form.resetFields();\n          await db!.room!.update(value.roomId, { stillEmpty: true });\n          fetchData();\n        });\n    });\n  };\n\n  const handleModalCancel = () => {\n    setVisibleModal(false);\n    setEdit('');\n    form.resetFields();\n  };\n\n  const handleDeleteData = (data: IAgreement) => {\n    Modal.warning({\n      title: `Bạn có muốn xóa hợp đồng ${data.code}?`,\n      onOk: () => {\n        db!\n          .agreement!.where('code')\n          .equals(data.code)\n          .delete()\n          .then(async () => {\n            message.success(`Xóa thành công!`);\n            await db!.room!.update(data.roomId, { stillEmpty: false });\n            fetchData();\n          });\n      }\n    });\n  };\n\n  return (\n    <>\n      <PageContainer\n        extra={[\n          <Button type='primary' onClick={() => setVisibleModal(true)}>\n            Thêm mới\n          </Button>\n        ]}\n        header={{ title: 'Quản lý hợp đồng' }}\n      >\n        <ProCard style={{ height: window.innerHeight - 168 }} className='ag-theme-alpine'>\n          <AgGridReact\n            animateRows\n            defaultColDef={{ floatingFilter: true, sortable: true, filter: true, resizable: true }}\n            columnDefs={[\n              { headerName: 'Mã', field: 'code', filter: 'agTextColumnFilter' },\n              {\n                headerName: 'Phòng',\n                field: 'room',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Khách hàng',\n                field: 'customer',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Thời hạn',\n                field: 'formatDate',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                pinned: 'right',\n                field: '',\n                width: 100,\n                floatingFilter: false,\n                cellRendererFramework: (params: any) => (\n                  <>\n                    <Tooltip title='Chỉnh sửa'>\n                      <Button\n                        onClick={() => handleEdit(params.data)}\n                        icon={<EditOutlined />}\n                        style={{ marginRight: 8 }}\n                        type='primary'\n                      />\n                    </Tooltip>\n\n                    <Tooltip title='Xóa'>\n                      <Button\n                        icon={<DeleteOutlined />}\n                        danger\n                        onClick={() => handleDeleteData(params.data)}\n                      />\n                    </Tooltip>\n                  </>\n                )\n              }\n            ]}\n            rowData={rowData.map(({ date, ...rest }) => ({\n              room: foreignKey.room!.find(room => room.id === rest.roomId)?.name,\n              date: JSON.stringify(date),\n              formatDate: `từ ${moment(date[0]).format('MM/YYYY')} đến ${moment(date[1]).format(\n                'MM/YYYY'\n              )}`,\n              customer: foreignKey.customer\n                .filter(customer => rest.customerIds.includes(customer.id))\n                .map(customer => customer.fullName)\n                .join(', '),\n              ...rest\n            }))}\n          />\n        </ProCard>\n      </PageContainer>\n\n      <Modal\n        visible={visibleModal}\n        title={edit ? 'Chỉnh sửa' : 'Thêm hợp đồng mới'}\n        centered\n        cancelText='Hủy'\n        onOk={handleModalOk}\n        onCancel={handleModalCancel}\n      >\n        <Form name='add-form' form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\n          <Form.Item label='Mã' name='code' rules={[{ required: true, message: 'Hãy nhập mã!' }]}>\n            <Input autoFocus />\n          </Form.Item>\n\n          <Form.Item\n            label='Phòng'\n            name='roomId'\n            rules={[{ required: true, message: 'Hãy chọn phòng!' }]}\n          >\n            <Select>\n              {foreignKey.room!.map(room => (\n                <Select.Option value={room.id} key={room.id}>\n                  {room.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label='Khách hàng'\n            name='customerIds'\n            rules={[{ required: true, message: 'Hãy chọn khách hàng!' }]}\n          >\n            <Select mode='multiple'>\n              {foreignKey.customer!.map(customer => (\n                <Select.Option value={customer.id} key={customer.id}>\n                  {customer.fullName}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label='Thời hạn'\n            name='date'\n            style={{ marginBottom: 0 }}\n            rules={[{ required: true, message: 'Hãy chọn thời hạn!' }]}\n          >\n            <DatePicker.RangePicker\n              style={{ width: '100%' }}\n              picker='month'\n              format={['MM/YYYY', 'MM/YYYY']}\n              ranges={{\n                '1 tháng': [moment(), moment().add(1, 'months')],\n                '3 tháng': [moment(), moment().add(3, 'months')],\n                '6 tháng': [moment(), moment().add(6, 'months')],\n                '1 năm': [moment(), moment().add(12, 'months')]\n              }}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default AgreementPage;\n","import { FC, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Button, Modal, Form, InputNumber, message, Tooltip, DatePicker } from 'antd';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport ProCard from '@ant-design/pro-card';\nimport { ValueFormatterParams } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\nimport moment from 'moment';\n\nconst UnitPricePage: FC = () => {\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [rowData, setRowData] = useState<IUnitPrice[]>([]);\n  const [edit, setEdit] = useState('');\n  const [form] = Form.useForm<Omit<IUnitPrice, 'id' | 'code' | 'date'> & { date: moment.Moment }>();\n  const db = window.roomManagementSystemDB;\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'VND'\n  });\n\n  const fetchData = async () => {\n    setRowData(await db!.unitPrice!.toArray());\n  };\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  const handleEdit = ({ date, ...rest }: Omit<IRoom, 'date'> & { date: moment.Moment }) => {\n    setEdit(rest.id);\n    setVisibleModal(true);\n    form.setFieldsValue({\n      date: moment(date),\n      ...rest\n    });\n  };\n\n  const handleModalOk = () => {\n    form.validateFields().then(async ({ date, ...rest }) => {\n      const value = { date: date?.valueOf(), code: moment(date).format('MM/YYYY'), ...rest };\n\n      const data = await db!.unitPrice!.where('code').equals(value.code).toArray();\n\n      if (data.filter(({ id }) => (edit ? edit !== id : id)).length > 0) {\n        message.error(`Đơn giá tháng ${data[0].code} đã tồn tại!`);\n        return;\n      }\n\n      if (edit) {\n        db!.unitPrice!.update(edit, value).then(updated => {\n          if (updated) {\n            message.success('Cập nhật thành công!');\n            setVisibleModal(false);\n            setEdit('');\n            form.resetFields();\n            fetchData();\n          } else {\n            message.error('Cập nhật thất bại!');\n          }\n        });\n        return;\n      }\n\n      db!\n        .unitPrice!.add({\n          id: uuidv4(),\n          ...value\n        })\n        .then(() => {\n          message.success('Tạo thành công!');\n          setVisibleModal(false);\n          form.resetFields();\n          fetchData();\n        });\n    });\n  };\n\n  const handleModalCancel = () => {\n    setVisibleModal(false);\n    setEdit('');\n    form.resetFields();\n  };\n\n  const handleDeleteData = (data: IUnitPrice) => {\n    Modal.warning({\n      title: `Bạn có muốn xóa đơn giá tháng ${data.code}?`,\n      onOk: () => {\n        db!\n          .unitPrice!.where('code')\n          .equals(data.code)\n          .delete()\n          .then(() => {\n            message.success(`Xóa thành công!`);\n            fetchData();\n          });\n      }\n    });\n  };\n\n  const dateValueFormatter = (params: ValueFormatterParams) =>\n    params.value && moment(+params.value).format('MM/YYYY');\n\n  return (\n    <>\n      <PageContainer\n        extra={[\n          <Button type='primary' onClick={() => setVisibleModal(true)}>\n            Thêm mới\n          </Button>\n        ]}\n        header={{ title: 'Quản lý đơn giá' }}\n      >\n        <ProCard style={{ height: window.innerHeight - 168 }} className='ag-theme-alpine'>\n          <AgGridReact\n            animateRows\n            defaultColDef={{ floatingFilter: true, sortable: true, filter: true }}\n            columnDefs={[\n              {\n                headerName: 'Đơn giá điện',\n                field: 'electricity',\n                filter: 'agTextColumnFilter',\n                valueFormatter: params => formatter.format(params.value)\n              },\n              {\n                headerName: 'Đơn giá nước',\n                field: 'water',\n                filter: 'agTextColumnFilter',\n                valueFormatter: params => formatter.format(params.value)\n              },\n              {\n                headerName: 'Tiền giữ xe',\n                field: 'parking',\n                filter: 'agTextColumnFilter',\n                valueFormatter: params => formatter.format(params.value)\n              },\n              {\n                headerName: 'Tiền rác',\n                field: 'junkMoney',\n                filter: 'agTextColumnFilter',\n                valueFormatter: params => formatter.format(params.value)\n              },\n              {\n                headerName: 'Thời gian',\n                field: 'date',\n                filterParams: {\n                  valueFormatter: dateValueFormatter\n                },\n                valueFormatter: dateValueFormatter\n              },\n              {\n                pinned: 'right',\n                field: '',\n                width: 100,\n                floatingFilter: false,\n                cellRendererFramework: (params: any) => {\n                  if (moment().isAfter(moment(params.data.date), 'months')) {\n                    return null;\n                  }\n\n                  return (\n                    <>\n                      <Tooltip title='Chỉnh sửa'>\n                        <Button\n                          onClick={() => handleEdit(params.data)}\n                          icon={<EditOutlined />}\n                          style={{ marginRight: 8 }}\n                          type='primary'\n                        />\n                      </Tooltip>\n\n                      <Tooltip title='Xóa'>\n                        <Button\n                          icon={<DeleteOutlined />}\n                          danger\n                          onClick={() => handleDeleteData(params.data)}\n                        />\n                      </Tooltip>\n                    </>\n                  );\n                }\n              }\n            ]}\n            rowData={rowData}\n          />\n        </ProCard>\n      </PageContainer>\n\n      <Modal\n        visible={visibleModal}\n        title={edit ? 'Chỉnh sửa' : 'Thêm loại phòng mới'}\n        centered\n        cancelText='Hủy'\n        onOk={handleModalOk}\n        onCancel={handleModalCancel}\n      >\n        <Form name='add-form' form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\n          <Form.Item\n            label='Điện'\n            name='electricity'\n            rules={[{ required: true, message: 'Hãy nhập đơn giá điện!' }]}\n          >\n            <InputNumber\n              style={{ width: '100%' }}\n              formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n              parser={value => value!.replace(/\\s?VNĐ|(,*)/g, '')}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label='Nước'\n            name='water'\n            rules={[{ required: true, message: 'Hãy nhập đơn giá nước!' }]}\n          >\n            <InputNumber\n              style={{ width: '100%' }}\n              formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n              parser={value => value!.replace(/\\s?VNĐ|(,*)/g, '')}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label='Tiền giữ xe'\n            name='parking'\n            rules={[{ required: true, message: 'Hãy nhập tiền xe!' }]}\n          >\n            <InputNumber\n              style={{ width: '100%' }}\n              formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n              parser={value => value!.replace(/\\s?VNĐ|(,*)/g, '')}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label='Tiền rác'\n            name='junkMoney'\n            rules={[{ required: true, message: 'Hãy nhập tiền rác!' }]}\n          >\n            <InputNumber\n              style={{ width: '100%' }}\n              formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n              parser={value => value!.replace(/\\s?VNĐ|(,*)/g, '')}\n            />\n          </Form.Item>\n\n          <Form.Item\n            label='Thời gian'\n            name='date'\n            style={{ marginBottom: 0 }}\n            rules={[{ required: true, message: 'Hãy chọn thời gian!' }]}\n          >\n            <DatePicker style={{ width: '100%' }} picker='month' format='MM/YYYY' />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default UnitPricePage;\n","import { FC, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport {\n  Button,\n  Modal,\n  Form,\n  InputNumber,\n  Input,\n  message,\n  Tooltip,\n  DatePicker,\n  Select\n} from 'antd';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport ProCard from '@ant-design/pro-card';\nimport { AgGridReact } from 'ag-grid-react';\nimport moment from 'moment';\n\ninterface IForeignKey {\n  room: IRoom[];\n  unitPrice: IUnitPrice[];\n}\n\nconst BillPage: FC = () => {\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [rowData, setRowData] = useState<IBill[]>([]);\n  const [edit, setEdit] = useState('');\n  const [form] = Form.useForm<\n    Omit<IBill, 'formatDate' | 'id' | 'date'> & { date: moment.Moment }\n  >();\n  const [foreignKey, setForeignKey] = useState<IForeignKey>({\n    room: [],\n    unitPrice: []\n  });\n  const db = window.roomManagementSystemDB;\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'VND'\n  });\n\n  const fetchData = async () => {\n    setRowData(await db!.bill!!.toArray());\n  };\n\n  const fetchForeignKeyData = async () => {\n    const room = await db!.room!.toArray();\n    const unitPrice = await db!.unitPrice!.toArray();\n    setForeignKey({\n      room,\n      unitPrice\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n    fetchForeignKeyData();\n    // eslint-disable-next-line\n  }, []);\n\n  const handleEdit = ({ date, ...rest }: IBill) => {\n    setEdit(rest.id);\n    setVisibleModal(true);\n    form.setFieldsValue({\n      date: moment(date),\n      ...rest\n    });\n  };\n\n  const handleModalOk = () => {\n    form.validateFields().then(async ({ date, ...rest }) => {\n      const value = { date: date.valueOf(), ...rest };\n      const data = await db!.bill!.where('code').equals(value.code).toArray();\n\n      if (data.filter(({ id }) => (edit ? edit !== id : id)).length > 0) {\n        message.error(`Hóa đơn ${value.code} đã tồn tại!`);\n        return;\n      }\n\n      const formatDate = moment(value.date).format('MM/YYYY');\n      const usedRoom = await db!.bill!.where({ roomId: value.roomId, formatDate }).toArray();\n\n      if (usedRoom.length) {\n        message.error('Có phòng đã được lập hóa đơn!');\n        return;\n      }\n\n      if (edit) {\n        db!.bill!.update(edit, { ...value }).then(updated => {\n          if (updated) {\n            message.success('Cập nhật thành công!');\n            setVisibleModal(false);\n            setEdit('');\n            form.resetFields();\n            fetchData();\n          } else {\n            message.error('Cập nhật thất bại!');\n          }\n        });\n        return;\n      }\n\n      db!\n        .bill!.add({\n          id: uuidv4(),\n          formatDate: moment(value.date).format('MM/YYYY'),\n          ...value\n        })\n        .then(() => {\n          message.success('Tạo thành công!');\n          setVisibleModal(false);\n          form.resetFields();\n          fetchData();\n        });\n    });\n  };\n\n  const handleModalCancel = () => {\n    setVisibleModal(false);\n    setEdit('');\n    form.resetFields();\n  };\n\n  const handleDeleteData = (data: IBill) => {\n    Modal.warning({\n      title: `Bạn có muốn xóa hóa đơn ${data.code}?`,\n      onOk: () => {\n        db!\n          .bill!.where('code')\n          .equals(data.code)\n          .delete()\n          .then(() => {\n            message.success(`Xóa thành công!`);\n            fetchData();\n          });\n      }\n    });\n  };\n\n  return (\n    <>\n      <PageContainer\n        extra={[\n          <Button type='primary' onClick={() => setVisibleModal(true)}>\n            Thêm mới\n          </Button>\n        ]}\n        header={{ title: 'Quản lý hóa đơn' }}\n      >\n        <ProCard style={{ height: window.innerHeight - 168 }} className='ag-theme-alpine'>\n          <AgGridReact\n            animateRows\n            defaultColDef={{ floatingFilter: true, sortable: true, filter: true, resizable: true }}\n            groupMultiAutoColumn\n            enableRangeSelection\n            columnDefs={[\n              { headerName: 'Thời gian', field: 'formatDate', rowGroup: true, hide: true },\n              { headerName: 'Mã', field: 'code', filter: 'agTextColumnFilter' },\n              {\n                headerName: 'Phòng',\n                field: 'room',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Số lượng điện tiêu thụ',\n                field: 'amountOfElectricity',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Số lượng nước tiêu thụ',\n                field: 'amountOfWater',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Số lượng xe',\n                field: 'numberOfVehicles',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Tiền điện',\n                field: 'electricityBill',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Tiền nước',\n                field: 'waterBill',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Tiền giữ xe',\n                field: 'parkingFee',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Tiền rác',\n                field: 'junkMoney',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Tổng',\n                field: 'total',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                pinned: 'right',\n                field: '',\n                width: 100,\n                floatingFilter: false,\n                cellRendererFramework: (params: any) => {\n                  if (!params.data || (params.data && moment().isAfter(moment(params.data.date)))) {\n                    return null;\n                  }\n\n                  return (\n                    <>\n                      <Tooltip title='Chỉnh sửa'>\n                        <Button\n                          onClick={() => handleEdit(params.data)}\n                          icon={<EditOutlined />}\n                          style={{ marginRight: 8 }}\n                          type='primary'\n                        />\n                      </Tooltip>\n\n                      <Tooltip title='Xóa'>\n                        <Button\n                          icon={<DeleteOutlined />}\n                          danger\n                          onClick={() => handleDeleteData(params.data)}\n                        />\n                      </Tooltip>\n                    </>\n                  );\n                }\n              }\n            ]}\n            rowData={rowData.map(data => {\n              const unitPrice = foreignKey.unitPrice.find(price => price.code === data.formatDate);\n              const electricityBill = unitPrice\n                ? unitPrice.electricity * data.amountOfElectricity\n                : 0;\n              const waterBill = unitPrice ? unitPrice.water * data.amountOfWater : 0;\n              const parkingFee = unitPrice ? unitPrice.parking * data.numberOfVehicles : 0;\n              const junkMoney = unitPrice?.junkMoney || 0;\n              const room = foreignKey.room.find(room => room.id === data.roomId)?.name;\n              const total = electricityBill + waterBill + parkingFee + junkMoney;\n\n              return {\n                room,\n                electricityBill: formatter.format(electricityBill),\n                waterBill: formatter.format(waterBill),\n                parkingFee: formatter.format(parkingFee),\n                junkMoney: formatter.format(junkMoney),\n                total: formatter.format(total),\n                ...data\n              };\n            })}\n          />\n        </ProCard>\n      </PageContainer>\n\n      <Modal\n        visible={visibleModal}\n        title={edit ? 'Chỉnh sửa' : 'Thêm hóa đơn mới'}\n        centered\n        cancelText='Hủy'\n        onOk={handleModalOk}\n        onCancel={handleModalCancel}\n      >\n        <Form name='add-form' form={form} labelCol={{ span: 8 }} wrapperCol={{ span: 16 }}>\n          <Form.Item label='Mã' name='code' rules={[{ required: true, message: 'Hãy nhập mã!' }]}>\n            <Input autoFocus />\n          </Form.Item>\n\n          <Form.Item\n            label='Phòng'\n            name='roomId'\n            rules={[{ required: true, message: 'Hãy chọn phòng!' }]}\n          >\n            <Select>\n              {foreignKey.room.map(room => (\n                <Select.Option value={room.id} key={room.id}>\n                  {room.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label='Số lượng điện tiêu thụ'\n            name='amountOfElectricity'\n            rules={[{ required: true, message: 'Hãy nhập số lượng điện tiêu thụ!' }]}\n          >\n            <InputNumber style={{ width: '100%' }} />\n          </Form.Item>\n\n          <Form.Item\n            label='Số lượng nước tiêu thụ'\n            name='amountOfWater'\n            rules={[{ required: true, message: 'Hãy nhập số lượng nước tiêu thụ!' }]}\n          >\n            <InputNumber style={{ width: '100%' }} />\n          </Form.Item>\n\n          <Form.Item\n            label='Số lượng xe'\n            name='numberOfVehicles'\n            rules={[{ required: true, message: 'Hãy nhập số lượng xe!' }]}\n          >\n            <InputNumber style={{ width: '100%' }} />\n          </Form.Item>\n\n          <Form.Item\n            label='Thời gian'\n            name='date'\n            style={{ marginBottom: 0 }}\n            rules={[{ required: true, message: 'Hãy chọn thời gian!' }]}\n          >\n            <DatePicker style={{ width: '100%' }} picker='month' format='MM/YYYY' />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default BillPage;\n","import { FC, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { Button, Modal, Form, InputNumber, Input, message, Tooltip } from 'antd';\nimport { PageContainer } from '@ant-design/pro-layout';\nimport ProCard from '@ant-design/pro-card';\nimport { AgGridReact } from 'ag-grid-react';\n\nconst EquipmentRoom: FC = () => {\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [rowData, setRowData] = useState<IEquipment[]>([]);\n  const [edit, setEdit] = useState('');\n  const [form] = Form.useForm<Omit<IEquipment, 'id'>>();\n  const db = window.roomManagementSystemDB;\n\n  const fetchData = async () => {\n    setRowData(await db!.equipment!.toArray());\n  };\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  const handleEdit = (data: IEquipment) => {\n    setEdit(data.id);\n    setVisibleModal(true);\n    form.setFieldsValue(data);\n  };\n\n  const handleModalOk = () => {\n    form.validateFields().then(async value => {\n      const data = await db!.equipment!.where('code').equals(value.code).toArray();\n\n      if (data.filter(({ id }) => (edit ? edit !== id : id)).length > 0) {\n        message.error(`${value.name} đã tồn tại!`);\n        return;\n      }\n\n      if (edit) {\n        db!.equipment!.update(edit, value).then(updated => {\n          if (updated) {\n            message.success('Cập nhật thành công!');\n            setVisibleModal(false);\n            setEdit('');\n            form.resetFields();\n            fetchData();\n          } else {\n            message.error('Cập nhật thất bại!');\n          }\n        });\n        return;\n      }\n\n      db!\n        .equipment!.add({\n          id: uuidv4(),\n          ...value\n        })\n        .then(() => {\n          message.success('Tạo thành công!');\n          setVisibleModal(false);\n          form.resetFields();\n          fetchData();\n        });\n    });\n  };\n\n  const handleModalCancel = () => {\n    setVisibleModal(false);\n    setEdit('');\n    form.resetFields();\n  };\n\n  const handleDeleteData = (data: IEquipment) => {\n    Modal.warning({\n      title: `Bạn có muốn xóa ${data.name}?`,\n      onOk: () => {\n        db!\n          .equipment!.where('code')\n          .equals(data.code)\n          .delete()\n          .then(() => {\n            message.success(`Xóa thành công!`);\n            fetchData();\n          });\n      }\n    });\n  };\n\n  return (\n    <>\n      <PageContainer\n        extra={[\n          <Button type='primary' onClick={() => setVisibleModal(true)}>\n            Thêm mới\n          </Button>\n        ]}\n        header={{ title: 'Quản lý trang thiết bị' }}\n      >\n        <ProCard style={{ height: window.innerHeight - 168 }} className='ag-theme-alpine'>\n          <AgGridReact\n            animateRows\n            defaultColDef={{ floatingFilter: true, sortable: true, filter: true }}\n            columnDefs={[\n              { headerName: 'Mã', field: 'code', filter: 'agTextColumnFilter' },\n              {\n                headerName: 'Tên',\n                field: 'name',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                headerName: 'Số lượng',\n                field: 'number',\n                filter: 'agTextColumnFilter'\n              },\n              {\n                pinned: 'right',\n                field: '',\n                width: 100,\n                floatingFilter: false,\n                cellRendererFramework: (params: any) => (\n                  <>\n                    <Tooltip title='Chỉnh sửa'>\n                      <Button\n                        onClick={() => handleEdit(params.data)}\n                        icon={<EditOutlined />}\n                        style={{ marginRight: 8 }}\n                        type='primary'\n                      />\n                    </Tooltip>\n\n                    <Tooltip title='Xóa'>\n                      <Button\n                        icon={<DeleteOutlined />}\n                        danger\n                        onClick={() => handleDeleteData(params.data)}\n                      />\n                    </Tooltip>\n                  </>\n                )\n              }\n            ]}\n            rowData={rowData}\n          />\n        </ProCard>\n      </PageContainer>\n\n      <Modal\n        visible={visibleModal}\n        title={edit ? 'Chỉnh sửa' : 'Thêm trang thiết bị mới mới'}\n        centered\n        cancelText='Hủy'\n        onOk={handleModalOk}\n        onCancel={handleModalCancel}\n      >\n        <Form name='add-form' form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 18 }}>\n          <Form.Item label='Mã' name='code' rules={[{ required: true, message: 'Hãy nhập mã!' }]}>\n            <Input autoFocus />\n          </Form.Item>\n\n          <Form.Item label='Tên' name='name' rules={[{ required: true, message: 'Hãy nhập tên!' }]}>\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label='Số lương'\n            name='number'\n            rules={[{ required: true, message: 'Hãy nhập số lượng!' }]}\n          >\n            <InputNumber style={{ width: '100%' }} />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default EquipmentRoom;\n","import { FC, useContext, useEffect, useState } from 'react';\nimport { Avatar, Menu, Dropdown, Modal } from 'antd';\nimport type { MenuClickEventHandler } from 'rc-menu/lib/interface';\nimport { UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport ProLayout from '@ant-design/pro-layout';\nimport { Link, Switch, Route, BrowserRouter } from 'react-router-dom';\nimport { routes } from './routes';\nimport { AuthenticationContext } from '../authentication-provider';\nimport AnalysisPage from '../analysis';\nimport RoomPage from '../room';\nimport KindOfRoomPage from '../kind-of-room';\nimport CustomerPage from '../customer';\nimport AgreementPage from '../agreement';\nimport UnitPricePage from '../unitPrice';\nimport BillPage from '../bill';\nimport EquipmentPage from '../equipment';\nimport Tour from 'reactour';\n\nconst Dashboard: FC = () => {\n  const [tourStep, setTourStep] = useState(0);\n  const [isTourOpen, setIsTourOpen] = useState(false);\n  const [pathname, setPathname] = useState('/analysis');\n  const { setAuthenticate } = useContext(AuthenticationContext);\n\n  const steps = [\n    {\n      selector: 'ul.ant-menu-inline li.ant-menu-item:nth-child(3)',\n      content: 'Hãy tạo loại phòng!'\n    },\n    {\n      selector: '.ant-page-header-heading-extra .ant-btn',\n      content: 'Tạo mới loại phòng!'\n    },\n    {\n      selector: '.ant-modal-wrap .ant-modal',\n      content: 'Tạo thông tin loại phòng!'\n    },\n    {\n      selector: 'ul.ant-menu-inline li.ant-menu-item:nth-child(2)',\n      content: 'Hãy tạo phòng!'\n    },\n    {\n      selector: '.ant-page-header-heading-extra .ant-btn',\n      content: 'Tạo mới phòng!'\n    },\n    {\n      selector: '.ant-modal-wrap .ant-modal',\n      content: 'Tạo thông tin phòng!'\n    },\n    {\n      selector: 'ul.ant-menu-inline li.ant-menu-item:nth-child(4)',\n      content: 'Hãy tạo khách hàng!'\n    },\n    {\n      selector: '.ant-page-header-heading-extra .ant-btn',\n      content: 'Tạo mới khách hàng!'\n    },\n    {\n      selector: '.ant-modal-wrap .ant-modal',\n      content: 'Tạo thông tin khách hàng!'\n    },\n    {\n      selector: 'ul.ant-menu-inline li.ant-menu-item:nth-child(5))',\n      content: 'Hãy tạo hợp đồng!'\n    },\n    {\n      selector: '.ant-page-header-heading-extra .ant-btn',\n      content: 'Tạo mới hợp đồng!'\n    },\n    {\n      selector: '.ant-modal-wrap .ant-modal',\n      content: 'Tạo thông tin hợp đồng!'\n    }\n  ];\n\n  useEffect(() => {\n    const hasTourGuide = localStorage.getItem('TOUR_GUIDE');\n\n    if (!hasTourGuide) {\n      // localStorage.setItem('TOUR_GUIDE', 'TOUR_GUIDE')\n      Modal.confirm({\n        content: 'Bắt đầu hướng dẫn?',\n        onOk: () => {\n          setIsTourOpen(true);\n          setTourStep(0);\n        }\n      });\n    }\n  }, []);\n\n  const handleUserMenuClick: MenuClickEventHandler = e => {\n    if (e.key === 'logout') {\n      setAuthenticate(false);\n      localStorage.removeItem('access-token');\n    }\n  };\n\n  const renderUserMenu = () => (\n    <Menu onClick={handleUserMenuClick}>\n      <Menu.Item key='logout' icon={<LogoutOutlined />}>\n        Đăng xuất\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <BrowserRouter>\n      <ProLayout\n        {...routes}\n        location={{\n          pathname\n        }}\n        title='Quản lý phòng trọ'\n        logo={null}\n        rightContentRender={() => (\n          <Dropdown overlay={renderUserMenu()}>\n            <Avatar size='small' icon={<UserOutlined />} />\n          </Dropdown>\n        )}\n        menuItemRender={(item, dom) => (\n          <Link\n            to={item.path!}\n            onClick={() => {\n              setPathname(item.path!);\n\n              if (item.path === '/kind-of-room') {\n                setTourStep(1);\n              }\n\n              if (item.path === '/room') {\n                setTourStep(4);\n              }\n            }}\n          >\n            {dom}\n          </Link>\n        )}\n        fixSiderbar\n      >\n        <Switch>\n          <Route render={() => <AnalysisPage />} key='analysis' path='/analysis' />\n          <Route render={() => <RoomPage changeTourStep={setTourStep} />} key='room' path='/room' />\n          <Route render={() => <CustomerPage />} key='customer' path='/customer' />\n          <Route render={() => <AgreementPage />} key='agreement' path='/agreement' />\n          <Route\n            render={() => <KindOfRoomPage changeTourStep={setTourStep} />}\n            key='kind-of-room'\n            path='/kind-of-room'\n          />\n          <Route render={() => <UnitPricePage />} key='unit-price' path='/unit-price' />\n          <Route render={() => <BillPage />} key='bill' path='/bill' />\n          <Route render={() => <EquipmentPage />} key='equipment' path='/equipment' />\n        </Switch>\n        <Tour\n          steps={steps}\n          disableFocusLock\n          showCloseButton={false}\n          showButtons={false}\n          showNavigation={false}\n          goToStep={tourStep}\n          isOpen={isTourOpen}\n          disableKeyboardNavigation\n          onRequestClose={() => setIsTourOpen(false)}\n        />\n      </ProLayout>\n    </BrowserRouter>\n  );\n};\n\nexport default Dashboard;\n","import { useContext } from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { AuthenticationContext } from './authentication-provider';\nimport LoginPage from './login';\nimport Dashboard from './dashboard';\n\nconst App = () => {\n  const { authenticate } = useContext(AuthenticationContext);\n\n  return (\n    <BrowserRouter basename='/'>\n      <Switch>\n        <Route\n          path='/'\n          render={routeProps => {\n            if (authenticate) {\n              return (\n                <Switch>\n                  <Route exact path='/analysis' key='analysis' render={() => <Dashboard />} />\n                  <Redirect to='/analysis' />\n                </Switch>\n              );\n            }\n\n            return (\n              <Switch>\n                <Route\n                  exact\n                  path='/login'\n                  key='login'\n                  render={() => <LoginPage {...routeProps} />}\n                />\n                <Redirect to='/login' />\n              </Switch>\n            );\n          }}\n        />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Dexie from 'dexie';\nimport { ConfigProvider } from 'antd';\nimport { LicenseManager } from 'ag-grid-enterprise';\nimport viVN from 'antd/lib/locale/vi_VN';\nimport 'moment/locale/vi';\nimport App from './App';\nimport AuthenticationProvider from './authentication-provider';\nimport reportWebVitals from './reportWebVitals';\nimport './style';\n\nLicenseManager.setLicenseKey('NDEwMjMzMzIwMDAwMA==4776ae9eddc069aad222a64b09b9e834');\n\nwindow.roomManagementSystemDB = new Dexie('room-management-system');\nwindow.roomManagementSystemDB!.version(1).stores({\n  account: 'id,username,password',\n  room: 'id,code,name,stillEmpty,kindOfRoomId',\n  kindOfRoom: 'id,code,name,price,deposit',\n  agreement: 'id,code,roomId,customerIds,date',\n  customer: 'id,code,fullName,identityCardNumber,dateOfBirth,sex,address,phoneNumber,job',\n  unitPrice: 'id,code,water,electricity,parking,junkMoney,date',\n  bill: 'id,code,amountOfWater,amountOfElectricity,numberOfVehicles,date,formatDate,roomId',\n  equipment: 'id,code,name,number'\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfigProvider locale={viVN}>\n      <AuthenticationProvider>\n        <App />\n      </AuthenticationProvider>\n    </ConfigProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}